@use "breakpoints" as *;

input[name="main-search"] {
  background-color: var(--clr-bg-base);
  border-radius: 100vmax;
  padding: 0.5em 1em;
  border: none;
  outline: none;
  color: var(--clr-txt-base);
  &::placeholder {
    color: var(--clr-acnt-light);
  }
  &:hover,
  &:focus {
    outline: 2px solid var(--clr-acnt-light);
    color: var(--clr-acnt-light);
    &::placeholder {
      opacity: 0;
    }
  }
}

.btn {
  display: block;
  width: fit-content;
  padding: 0.5em 0.75em;
  color: var(--clr-fxd-txt-base);
  font-size: var(--fs-base);
  font-weight: 500;
  cursor: pointer;
  border: none;
  outline: none;
  text-decoration: none;
  &-primary {
    background-color: var(--clr-acnt-base);
    &:hover,
    &:focus {
      background-color: var(--clr-acnt-dark);
    }
    &:focus {
      outline: 2px solid var(--clr-acnt-light);
    }
  }
  &-secondary {
    background-color: var(--clr-bg-base);
    color: var(--clr-txt-base);
    &:hover,
    &:focus {
      background-color: var(--clr-bg-dark);
    }
    &:focus {
      outline: 2px solid var(--clr-bg-light);
    }
  }
  &-danger {
    background-color: var(--clr-danger-base);
    &:hover,
    &:focus {
      background-color: var(--clr-danger-dark);
    }
    &:focus {
      outline: 2px solid var(--clr-danger-light);
    }
  }
  &-success {
    background-color: var(--clr-success-base);
    &:hover,
    &:focus {
      background-color: var(--clr-success-dark);
    }
    &:focus {
      outline: 2px solid var(--clr-success-light);
    }
  }
}

.table-container {
  margin-inline: auto;
  border-radius: 0.5rem;
  border: 1px solid var(--clr-bg-light);
  width: 300px;
  min-width: 100%;
  overflow-x: auto;
  .table {
    width: 100%;
    border-collapse: collapse;
    border-spacing: 0;
    tr.dimmed {
      background-color: var(--clr-bg-dark) !important;
      cursor: no-drop;
      *:not(button, a) {
        font-weight: 300;
      }
    }
    tbody tr:not(:last-of-type) {
      border-bottom: 1px solid var(--clr-bg-light);
    }
    tbody tr:hover:not(.dimmed) {
      background-color: var(--clr-acnt-dark);
      *:not(.btn) {
        color: var(--clr-fxd-txt-base);
      }
    }
    .btn {
      font-size: var(--fs-sm) !important;
      padding: 0.25em 0.5em;
      text-align: left;
    }
    td,
    th {
      padding: 1rem 0.5em;
      text-align: center;
      font-size: var(--fs-sm) !important;
      white-space: nowrap;
      &.btn-group {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.25em;
      }
    }
  }
}

#info-msg-container {
  position: fixed;
  left: 0;
  top: 0;
  z-index: 20;
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 0;
  width: 100%;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.2);
  backdrop-filter: blur(10px);
  isolation: isolate;
  #info-msg {
    &.danger {
      background-color: var(--clr-danger-base) !important;
    }
    background-color: var(--clr-success-dark);
    color: var(--clr-fxd-txt-base);
    padding: 1em;
    font-size: var(--fs-md);
  }
}

.count-card {
  display: flex;
  align-items: flex-start;
  justify-content: center;
  flex-direction: column;
  padding: 0.5em 1em;
  border-radius: 0.5rem;
  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.3);
  background-color: var(--clr-bg-dark);
  text-decoration: none;
  &:hover {
    span {
      letter-spacing: 0;
      font-weight: 400;
    }
  }
  span {
    font-size: var(--fs-sm);
    font-weight: 300;
    color: var(--clr-txt-dark);
    letter-spacing: -1px;
    transition: 200ms;
  }
  p {
    font-weight: 700;
    font-size: var(--fs-md);
  }
}

.last-updates .wrapper > div {
  background-color: var(--clr-bg-dark);
  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.3);
  border-radius: 0.5rem;
  .heading {
    padding: 0.5em;
    letter-spacing: -1px;
    font-weight: 600;
    text-align: center;
  }
  .body {
    list-style: none;
    li {
      &:hover {
        background-color: var(--clr-acnt-base);
        * {
          color: var(--clr-fxd-txt-base) !important;
        }
      }
    }
    li:not(:last-of-type) {
      border-bottom: 1px solid var(--clr-bg-base);
    }
    li a {
      display: block;
      text-decoration: none;
      display: flex;
      align-items: center;
      gap: 0.5em;
      padding: 0.5em 1em;
      img {
        display: block;
        width: 100%;
        max-width: 30px;
        border-radius: 50%;
        aspect-ratio: 1/1;
        object-fit: cover;
      }
      .title {
        flex: 1;
        p:first-of-type {
          font-weight: 700;
          font-size: var(--fs-sm);
        }
        p:last-of-type {
          font-size: var(--fs-sm);
          font-weight: 300;
          color: var(--clr-txt-dark);
        }
      }
      > span {
        font-weight: 700;
        font-size: var(--fs-sm);
        letter-spacing: -1px;
      }
    }
  }
}

.dots {
  position: relative;
  width: 30px;
  aspect-ratio: 1/1;
  cursor: pointer;
  isolation: isolate;
  &:hover,
  &:focus {
    background-color: var(--clr-acnt-dark);
    .list {
      transform: scale(1);
    }
  }
  &:after {
    content: "";
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 5px;
    aspect-ratio: 1/1;
    border-radius: 50%;
    background-color: var(--clr-txt-base);
    box-shadow: 0 6px 0 0 var(--clr-txt-base), 0 -6px 0 0 var(--clr-txt-base);
  }
  .list {
    position: absolute;
    bottom: 0;
    right: 75%;
    z-index: 1000;
    display: flex;
    flex-direction: column;
    align-items: center;
    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.4);
    border-radius: 8px;
    overflow: hidden;
    transform: scale(0);
    transform-origin: right center;
    transition: 150ms;
    border: 1px solid var(--clr-bg-light);
    > * {
      width: 100%;
      &:not(:last-of-type) {
        border-bottom: 1px solid var(--clr-bg-light);
      }
      &:hover {
        background-color: var(--clr-acnt-base);
        color: var(--clr-fxd-txt-base);
      }
    }
  }
}
